/* tslint:disable */


/**
 * AUTO-GENERATED FILE @ 2020-06-06 21:11:01 - DO NOT EDIT!
 *
 * This file was automatically generated by schemats v.3.0.3
 * $ schemats generate -c postgres://username:password@localhost/postgres -t contribution -t transfer -t rollover -t interested_party -t applicant -t body -t benneficiary -s salesforce
 *
 */


export namespace contributionFields {
    export type amount = number | null;
    export type method = string | null;
    export type tax_year = string | null;
    export type bank_account = Object | null;
    export type token = string;

}

export interface contribution {
    amount: contributionFields.amount;
    method: contributionFields.method;
    tax_year: contributionFields.tax_year;
    bank_account: contributionFields.bank_account;
    token: contributionFields.token;

}

export namespace transferFields {
    export type amount = number | null;
    export type full_or_partial = string | null;
    export type institution_name = string | null;
    export type account_type = string | null;
    export type account_number = string | null;
    export type funds_delivery_method_to_midland = string | null;
    export type delivery_method = string | null;
    export type contact_name = string | null;
    export type contact_phone_number = string | null;
    export type address = Object | null;
    export type token = string;

}

export interface transfer {
    amount: transferFields.amount;
    full_or_partial: transferFields.full_or_partial;
    institution_name: transferFields.institution_name;
    account_type: transferFields.account_type;
    account_number: transferFields.account_number;
    funds_delivery_method_to_midland: transferFields.funds_delivery_method_to_midland;
    delivery_method: transferFields.delivery_method;
    contact_name: transferFields.contact_name;
    contact_phone_number: transferFields.contact_phone_number;
    address: transferFields.address;
    token: transferFields.token;

}

export namespace rolloverFields {
    export type amount = number | null;
    export type institution_name = string | null;
    export type account_type = string | null;
    export type account_number = string | null;
    export type funds_delivery_method_to_midland = string | null;
    export type rollover_type = string | null;
    export type delivery_method = string | null;
    export type contact_name = string | null;
    export type contact_phone_number = string | null;
    export type address = Object | null;
    export type token = string;

}

export interface rollover {
    amount: rolloverFields.amount;
    institution_name: rolloverFields.institution_name;
    account_type: rolloverFields.account_type;
    account_number: rolloverFields.account_number;
    funds_delivery_method_to_midland: rolloverFields.funds_delivery_method_to_midland;
    rollover_type: rolloverFields.rollover_type;
    delivery_method: rolloverFields.delivery_method;
    contact_name: rolloverFields.contact_name;
    contact_phone_number: rolloverFields.contact_phone_number;
    address: rolloverFields.address;
    token: rolloverFields.token;

}

export namespace interested_partyFields {
    export type first_name = string | null;
    export type middle_name = string | null;
    export type last_name = string | null;
    export type social_security_number = string | null;
    export type date_of_birth = Date | null;
    export type email = string | null;
    export type phone = string | null;
    export type beneficiary_type = string | null;
    export type relationship = string | null;
    export type share_percentage = number | null;
    export type address = Object | null;
    export type token = string;

}

export interface interested_party {
    first_name: interested_partyFields.first_name;
    middle_name: interested_partyFields.middle_name;
    last_name: interested_partyFields.last_name;
    social_security_number: interested_partyFields.social_security_number;
    date_of_birth: interested_partyFields.date_of_birth;
    email: interested_partyFields.email;
    phone: interested_partyFields.phone;
    beneficiary_type: interested_partyFields.beneficiary_type;
    relationship: interested_partyFields.relationship;
    share_percentage: interested_partyFields.share_percentage;
    address: interested_partyFields.address;
    token: interested_partyFields.token;

}

export namespace applicantFields {
    export type salutation = string | null;
    export type first_name = string | null;
    export type middle_name = string | null;
    export type last_name = string | null;
    export type social_security_number = string | null;
    export type date_of_birth = Date | null;
    export type email = string | null;
    export type phone = string | null;
    export type marital_status = string | null;
    export type alternate_phone = string | null;
    export type alternate_phone_type = string | null;
    export type preferred_contact_method = string | null;
    export type mothers_maiden_name = string | null;
    export type statement = string | null;
    export type occupation = string | null;
    export type legal_address = Object | null;
    export type mailing_address = Object | null;
    export type token = string;

}

export interface applicant {
    salutation: applicantFields.salutation;
    first_name: applicantFields.first_name;
    middle_name: applicantFields.middle_name;
    last_name: applicantFields.last_name;
    social_security_number: applicantFields.social_security_number;
    date_of_birth: applicantFields.date_of_birth;
    email: applicantFields.email;
    phone: applicantFields.phone;
    marital_status: applicantFields.marital_status;
    alternate_phone: applicantFields.alternate_phone;
    alternate_phone_type: applicantFields.alternate_phone_type;
    preferred_contact_method: applicantFields.preferred_contact_method;
    mothers_maiden_name: applicantFields.mothers_maiden_name;
    statement: applicantFields.statement;
    occupation: applicantFields.occupation;
    legal_address: applicantFields.legal_address;
    mailing_address: applicantFields.mailing_address;
    token: applicantFields.token;

}

export namespace bodyFields {
    export type account_type = string | null;
    export type offering_id = string | null;
    export type investment_type = string | null;
    export type owner_id = string | null;
    export type referred_by = string | null;
    export type case_management = string | null;
    export type investment_amount = number | null;
    export type credit_card = Object | null;
    export type bank_account = Object | null;
    export type transfer_form = boolean | null;
    export type rollover_form = boolean | null;
    export type cash_contribution_form = boolean | null;
    export type token = string;

}

export interface body {
    account_type: bodyFields.account_type;
    offering_id: bodyFields.offering_id;
    investment_type: bodyFields.investment_type;
    owner_id: bodyFields.owner_id;
    referred_by: bodyFields.referred_by;
    case_management: bodyFields.case_management;
    investment_amount: bodyFields.investment_amount;
    credit_card: bodyFields.credit_card;
    bank_account: bodyFields.bank_account;
    transfer_form: bodyFields.transfer_form;
    rollover_form: bodyFields.rollover_form;
    cash_contribution_form: bodyFields.cash_contribution_form;
    token: bodyFields.token;

}

export namespace benneficiaryFields {
    export type first_name = string | null;
    export type middle_name = string | null;
    export type last_name = string | null;
    export type social_security_number = string | null;
    export type date_of_birth = Date | null;
    export type email = string | null;
    export type phone = string | null;
    export type beneficiary_type = string | null;
    export type relationship = string | null;
    export type share_percentage = number | null;
    export type address = Object | null;
    export type token = string;

}

export interface benneficiary {
    first_name: benneficiaryFields.first_name;
    middle_name: benneficiaryFields.middle_name;
    last_name: benneficiaryFields.last_name;
    social_security_number: benneficiaryFields.social_security_number;
    date_of_birth: benneficiaryFields.date_of_birth;
    email: benneficiaryFields.email;
    phone: benneficiaryFields.phone;
    beneficiary_type: benneficiaryFields.beneficiary_type;
    relationship: benneficiaryFields.relationship;
    share_percentage: benneficiaryFields.share_percentage;
    address: benneficiaryFields.address;
    token: benneficiaryFields.token;

}
